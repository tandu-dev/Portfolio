@inject IAuthenticationService AuthenticationService
@inject NavigationManager NavigationManager
@inject IMessageService MessageService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Blazor Blog</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

    <div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
        <nav class="flex-column">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Home
                </NavLink>
            </div>
            @if(AuthenticationService.blogCredential != null){
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="addpost" Match="NavLinkMatch.All">
                        <span class="oi oi-plus" aria-hidden="true"></span> Add Post
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="logout" Match="NavLinkMatch.All">
                        <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
                    </NavLink>
                </div>           
            }
        </nav>
    </div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    protected override void OnInitialized()
        {
            
            base.OnInitialized();
            MessageService.OnMessage += MessageHandler;

        }
    
    public void Dispose()
    {
        MessageService.OnMessage -= MessageHandler;
    }
    private void MessageHandler(string message)
    {
        if (message !=null )
        {
            if (message== "render")
            {
                StateHasChanged();
            }
        }
    }
}
